{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport var useScroll = function useScroll() {\n  // setting initial value to true\n  var _useState = useState(0),\n      scroll = _useState[0],\n      setScroll = _useState[1]; // running on mount\n\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      var scrollCheck = window.scrollY > 200;\n\n      if (scrollCheck !== scroll) {\n        setScroll(scrollCheck);\n      }\n    }; // setting the event handler from web API\n\n\n    document.addEventListener(\"scroll\", onScroll); // cleaning up from the web API\n\n    return function () {\n      document.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [scroll, setScroll]);\n  return scroll;\n};","map":{"version":3,"sources":["/home/nico/Desktop/repos/arstudios/services/custom-hooks/on-scroll/index.js"],"names":["useState","useEffect","useScroll","scroll","setScroll","onScroll","scrollCheck","window","scrollY","document","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B;AAD6B,kBAEDF,QAAQ,CAAC,CAAD,CAFP;AAAA,MAEtBG,MAFsB;AAAA,MAEdC,SAFc,iBAI7B;;;AACAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,UAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,GAAiB,GAArC;;AACA,UAAIF,WAAW,KAAKH,MAApB,EAA4B;AAC1BC,QAAAA,SAAS,CAACE,WAAD,CAAT;AACD;AACF,KALD,CADc,CAQd;;;AACAG,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCL,QAApC,EATc,CAWd;;AACA,WAAO,YAAM;AACXI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,QAA7B,EAAuCN,QAAvC;AACD,KAFD;AAGD,GAfQ,EAeN,CAACF,MAAD,EAASC,SAAT,CAfM,CAAT;AAiBA,SAAOD,MAAP;AACD,CAvBM","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useScroll = () => {\n  // setting initial value to true\n  const [scroll, setScroll] = useState(0);\n\n  // running on mount\n  useEffect(() => {\n    const onScroll = () => {\n      const scrollCheck = window.scrollY > 200;\n      if (scrollCheck !== scroll) {\n        setScroll(scrollCheck);\n      }\n    };\n\n    // setting the event handler from web API\n    document.addEventListener(\"scroll\", onScroll);\n\n    // cleaning up from the web API\n    return () => {\n      document.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [scroll, setScroll]);\n\n  return scroll;\n};\n"]},"metadata":{},"sourceType":"module"}